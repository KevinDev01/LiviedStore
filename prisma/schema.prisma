// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url = env("DATABASE_URL")
}

model User {
  id String  @id @default(auto()) @map("_id") @db.ObjectId
  email String @unique
  name String
  lastname String
  phone String? @unique
  password String
  verified Boolean @default(false)
  orders Orders[]
  address Address?
  role Role @default(USER)
}

model Orders {
   id String @id @default(auto()) @map("_id") @db.ObjectId
   author User @relation(fields: [userId], references: [id])
   userId String @db.ObjectId
   amount Float
   bag Product[]
}

model Product {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  Order Orders @relation(fields: [orderId], references: [id])
  orderId String @db.ObjectId
  sku String @unique
  name String
  price Float
  description String
  amount String
  comments Comment[]
  img String
  category Category @relation(fields: [categoryId], references: [id])
  categoryId String @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Category {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  products Product[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  subCategories SubCategory[]
  features String[]
}

model SubCategory {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  category Category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId String @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  promoId Promo[]
}

model Promo {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  value Int
  cupon String? 
  subcategory SubCategory @relation(fields: [subCategoryId], references: [id])
  subCategoryId String @db.ObjectId
  finalDate DateTime
}

model Comment {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  comment String
  product Product @relation(fields: [productId], references: [id])
  productId  String @db.ObjectId
}

type Address {
  street String
  city   String
  state  String
  zip    String
}

enum Role {
  USER
  ADMIN
}
